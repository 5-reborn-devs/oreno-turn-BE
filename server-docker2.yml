services:
  haproxy:
    image: haproxy:2.3
    ports:
      - '9000:9000'
      - '1666:1666'
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg

  game-server-1:
    build:
      context: ./GAME_SERVER
      dockerfile: Dockerfile
    container_name: game-server-1
    ports:
      - '16666:16666' # TCP 게임 서버 포트
    environment:
      - PORT=16666
      - HOST=15.165.168.120
      - CLIENT_VERSION=1.0.0
      - DB1_NAME=USER_DB
      - DB1_HOST=express-database.c94ueui6qc9r.ap-northeast-2.rds.amazonaws.com
      - DB1_PORT=3306
      - DB1_USER=root
      - DB1_PASSWORD=gLaFmvi38uW4c5z
      - REDIS_HOST=oredis.mmnarf.ng.0001.apn2.cache.amazonaws.com
      - REDIS_PORT=6379
    depens_on:
      - lobby-server-1
      - lobby-server-2

  game-server-2:
    build:
      context: ./GAME_SERVER
      dockerfile: Dockerfile
    container_name: game-server-2
    ports:
      - '16667:16667' # TCP 게임 서버 포트
    environment:
      - PORT=16667
      - HOST=15.165.168.120
      - CLIENT_VERSION=1.0.0
      - DB1_NAME=USER_DB
      - DB1_HOST=express-database.c94ueui6qc9r.ap-northeast-2.rds.amazonaws.com
      - DB1_PORT=3306
      - DB1_USER=root
      - DB1_PASSWORD=gLaFmvi38uW4c5z
      - REDIS_HOST=oredis.mmnarf.ng.0001.apn2.cache.amazonaws.com
      - REDIS_PORT=6379
    depens_on:
      - lobby-server-1
      - lobby-server-2

  game-server-3:
    build:
      context: ./GAME_SERVER
      dockerfile: Dockerfile
    container_name: game-server-3
    ports:
      - '16668:16668' # TCP 게임 서버 포트
    environment:
      - PORT=16668
      - HOST=15.165.168.120
      - CLIENT_VERSION=1.0.0
      - DB1_NAME=USER_DB
      - DB1_HOST=express-database.c94ueui6qc9r.ap-northeast-2.rds.amazonaws.com
      - DB1_PORT=3306
      - DB1_USER=root
      - DB1_PASSWORD=gLaFmvi38uW4c5z
      - REDIS_HOST=oredis.mmnarf.ng.0001.apn2.cache.amazonaws.com
      - REDIS_PORT=6379
    depens_on:
      - lobby-server-1
      - lobby-server-2

  lobby-server-1:
    build:
      context: ./LOBBY_SERVER
      dockerfile: Dockerfile
    container_name: lobby-server-1
    ports:
      - '6666:6666' # TCP 로비 서버 포트
    environment:
      - PORT=6666
      - HOST=43.202.60.191
      - CLIENT_VERSION=1.0.0
      - DB1_NAME=USER_DB
      - DB1_HOST=express-database.c94ueui6qc9r.ap-northeast-2.rds.amazonaws.com
      - DB1_PORT=3306
      - DB1_USER=root
      - DB1_PASSWORD=gLaFmvi38uW4c5z
      - REDIS_HOST=oredis.mmnarf.ng.0001.apn2.cache.amazonaws.com
      - REDIS_PORT=6379
    deploy:
      resources:
        limits:
          cpus: '0.50' # 최대 1개의 코어 할당
          memory: 256MB # 최대 2GB의 메모리 할당

  lobby-server-2:
    build:
      context: ./LOBBY_SERVER
      dockerfile: Dockerfile
    container_name: lobby-server-2
    ports:
      - '6667:6667' # TCP 로비 서버 포트
    environment:
      - PORT=6667
      - HOST=15.165.168.120
      - CLIENT_VERSION=1.0.0
      - DB1_NAME=USER_DB
      - DB1_HOST=express-database.c94ueui6qc9r.ap-northeast-2.rds.amazonaws.com
      - DB1_PORT=3306
      - DB1_USER=root
      - DB1_PASSWORD=gLaFmvi38uW4c5z
      - REDIS_HOST=oredis.mmnarf.ng.0001.apn2.cache.amazonaws.com
      - REDIS_PORT=6379
    deploy:
      resources:
        limits:
          cpus: '0.50' # 최대 1개의 코어 할당
          memory: 256MB # 최대 2GB의 메모리 할당
